#!/usr/bin/env python2

import os
import sys
import json
import subprocess
import argparse
import ConfigParser

def upc(args, config):
    drush = config.get("common", "DrushCommand")
    with open(os.devnull) as DEVNULL:
        try:
            cmd = "git status"
            subprocess.check_call(cmd.split(" "), stderr=DEVNULL)
        except subprocess.CalledProcessError:
            print "Your site doesn't seem to manage with git"
            sys.exit(1)
        
        cmd = drush + " ups --format=json --security-only"
        update_status = subprocess.check_output(cmd, shell=True, stderr=DEVNULL)
        # workaround for "docker-compose run -T" inconsistently outputs stdout / stderr?
        # see also: https://github.com/docker/compose/issues/3267
        start = update_status.index("{")
        json_status = json.loads(update_status[update_status.index("{"):])
        modules = json_status.keys()
        modules.remove("drupal")
        
        for module in modules:
            name = json_status[module]["name"]
            path = json_status[module]["path"]
            latest_update = json_status[module]["security updates"][0]
        
            version = latest_update["version"]
            release_link = latest_update["release_link"]
        
            cmd = drush + " upc -y %(name)s %(version)s" % locals()
            subprocess.call(cmd, shell=True, stderr=DEVNULL)
        
            cmd = "git add -A %(path)s" % locals()
            subprocess.call(cmd, shell=True, stdout=DEVNULL, stderr=DEVNULL)
        
            cmd = 'git commit -m "%(name)s: update to %(version)s for security\n\n%(release_link)s"' % locals()
            subprocess.call(cmd, shell=True, stdout=DEVNULL, stderr=DEVNULL)

parser = argparse.ArgumentParser()
subparsers = parser.add_subparsers()
parser_upc = subparsers.add_parser('upc', help='Execute drush pm-updatecode and update your git repositoy.')
parser_upc.set_defaults(func=upc)

args = parser.parse_args() 

config = ConfigParser.ConfigParser()
config.read([os.path.join(os.path.dirname(os.path.realpath(__file__)), 'drush-scm.ini'), os.path.expanduser('~/.drush-scm.init')])

args.func(args, config)
